apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply from: "tinkerConfig.gradle"

def javaVersion = JavaVersion.VERSION_1_7

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        applicationId "com.lchli.studydiscuss"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME as String
    }

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false

            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            minifyEnabled false

            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
            manifest.srcFile 'src/main/AndroidManifest.xml'
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['libs']
        }
    }


}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:palette-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:percent:${ANDROID_SUPPORT_VERSION}"

    compile 'com.github.bumptech.glide:glide:3.6.0'
    compile 'com.apkfuns.logutils:library:1.0.6'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.orhanobut:dialogplus:1.11@aar'
    compile 'cn.finalteam:galleryfinal:1.4.8.7'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.4'

    compile 'org.greenrobot:greendao:3.1.0'
    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'com.bigkoo:convenientbanner:2.0.5'
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'

    compile 'cn.pedant.sweetalert:library:1.3'

    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.ncornette.cache:okcache-control:1.1.1'
    compile 'com.karumi:dexter:2.2.2'
    compile 'com.jakewharton:disklrucache:2.0.2'

    compile 'com.zhy:okhttputils:2.6.2'
    compile 'com.google.code.gson:gson:2.7'

    compile 'com.github.lchli:AndroidPinnedRecyclerView:1.0.0'


}
//sign com.lchli.studydiscuss.bm.config.
def Properties props = new Properties()
def propFile = new File('private.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
}

if (props.containsKey('STORE_FILE')
        && props.containsKey('STORE_PASSWORD')
        && props.containsKey('KEY_ALIAS')
        && props.containsKey('KEY_PASSWORD')) {
    android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
    android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
    android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
    android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
} else {
    println 'private.properties not found or incomplete'
    android.buildTypes.release.signingConfig = null
}
